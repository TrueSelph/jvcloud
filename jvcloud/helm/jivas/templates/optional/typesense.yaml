{{- if .Values.optionalServices.typesense.enabled }}
# First create the secret
apiVersion: v1
kind: Secret
metadata:
  name: typesense-secrets
  labels:
    {{- include "jivas.labels" . | nindent 4 }}
type: Opaque
data:
  TYPESENSE_API_KEY: {{ default (randAlphaNum 32) .Values.optionalServices.typesense.apiKey | b64enc }}
---
# Then create the StatefulSet
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: typesense
  labels:
    {{- include "jivas.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: typesense
  template:
    metadata:
      labels:
        app: typesense
        {{- include "jivas.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - name: typesense
          image: typesense/typesense:26.0
          ports:
            - containerPort: 8108
          env:
            - name: TYPESENSE_API_KEY
              valueFrom:
                secretKeyRef:
                  name: typesense-secrets
                  key: TYPESENSE_API_KEY
            - name: TYPESENSE_DATA_DIR
              value: "/data"
          volumeMounts:
            - name: typesense-persistent-storage
              mountPath: /data
  volumeClaimTemplates:
    - metadata:
        name: typesense-persistent-storage
      spec:
        accessModes: [ "ReadWriteOnce" ]
        storageClassName: {{ .Values.optionalServices.typesense.storageClassName }}
        resources:
          requests:
            storage: {{ .Values.optionalServices.typesense.storage }}
---
# And finally create the Service
apiVersion: v1
kind: Service
metadata:
  name: typesense
  labels:
    app: typesense
    {{- include "jivas.labels" . | nindent 4 }}
spec:
  selector:
    app: typesense
  ports:
    - protocol: TCP
      port: 8108
      targetPort: 8108
  type: ClusterIP
{{- end }}