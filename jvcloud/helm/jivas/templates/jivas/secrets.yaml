{{- define "jivas.randomPassword" -}}
{{- randAlphaNum 32 | b64enc -}}
{{- end -}}

{{- define "jivas.randomTokenSecret" -}}
{{- randAlphaNum 50 -}}
{{- end -}}

apiVersion: v1
kind: Secret
metadata:
  name: jivas-secrets
  labels:
    {{- include "jivas.labels" . | nindent 4 }}
type: Opaque
data:
  {{- $existingSecret := (lookup "v1" "Secret" .Release.Namespace "jivas-secrets") }}
  
  {{- /* JIVAS_PASSWORD */ -}}
  {{- $jivasPassword := "" }}
  {{- if and $existingSecret $existingSecret.data $existingSecret.data.JIVAS_PASSWORD }}
    {{- $jivasPassword = $existingSecret.data.JIVAS_PASSWORD }}
  {{- else if .Values.jivas.secrets.password }}
    {{- $jivasPassword = (.Values.jivas.secrets.password | b64enc) }}
  {{- else }}
    {{- $jivasPassword = (randAlphaNum 32 | b64enc) }}
  {{- end }}
  
  {{- /* JIVAS_WEBHOOK_SECRET_KEY */ -}}
  {{- $jivasWebhookSecretKey := "" }}
  {{- if and $existingSecret $existingSecret.data $existingSecret.data.JIVAS_WEBHOOK_SECRET_KEY }}
    {{- $jivasWebhookSecretKey = $existingSecret.data.JIVAS_WEBHOOK_SECRET_KEY }}
  {{- else if .Values.jivas.secrets.webhookSecretKey }}
    {{- $jivasWebhookSecretKey = (.Values.jivas.secrets.webhookSecretKey | b64enc) }}
  {{- else }}
    {{- $jivasWebhookSecretKey = (randAlphaNum 32 | b64enc) }}
  {{- end }}
  
  {{- /* JIVAS_TOKEN_SECRET */ -}}
  {{- $jivasTokenSecret := "" }}
  {{- if and $existingSecret $existingSecret.data $existingSecret.data.JIVAS_TOKEN_SECRET }}
    {{- $jivasTokenSecret = $existingSecret.data.JIVAS_TOKEN_SECRET }}
  {{- else if .Values.jivas.secrets.tokenSecret }}
    {{- $jivasTokenSecret = (.Values.jivas.secrets.tokenSecret | b64enc) }}
  {{- else }}
    {{- $jivasTokenSecret = (randAlphaNum 32 | b64enc) }}
  {{- end }}
  
  {{- /* TOKEN_SECRET */ -}}
  {{- $tokenSecret := "" }}
  {{- if and $existingSecret $existingSecret.data $existingSecret.data.TOKEN_SECRET }}
    {{- $tokenSecret = $existingSecret.data.TOKEN_SECRET }}
  {{- else if .Values.jivas.secrets.plainTokenSecret }}
    {{- $tokenSecret = (.Values.jivas.secrets.plainTokenSecret | b64enc) }}
  {{- else }}
    {{- $tokenSecret = (randAlphaNum 50 | b64enc) }}
  {{- end }}
  
  JIVAS_PASSWORD: {{ $jivasPassword }}
  JIVAS_WEBHOOK_SECRET_KEY: {{ $jivasWebhookSecretKey }}
  JIVAS_TOKEN_SECRET: {{ $jivasTokenSecret }}
  TOKEN_SECRET: {{ $tokenSecret }}
  
  {{- if eq .Values.jivas.config.fileInterface "s3" }}
  JIVAS_S3_BUCKET_NAME: {{ .Values.jivas.config.s3.bucketName | b64enc }}
  JIVAS_S3_REGION_NAME: {{ .Values.jivas.config.s3.regionName | b64enc }}
  JIVAS_S3_ACCESS_KEY_ID: {{ .Values.jivas.config.s3.accessKeyId | b64enc }}
  JIVAS_S3_SECRET_ACCESS_KEY: {{ .Values.jivas.config.s3.secretAccessKey | b64enc }}
  {{- end }}